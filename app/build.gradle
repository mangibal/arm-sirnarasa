plugins {
    id("com.android.application")
//    id("android")
    id("kotlin-parcelize")
    id("kotlin-kapt")
    id("kotlin-android")
//    id("koin")
    id("com.google.gms.google-services")
    id("com.google.firebase.crashlytics")
    id("com.google.firebase.firebase-perf")
}

// Try reading secrets from file
def secretsPropertiesFile = rootProject.file("secret.properties")
def secretProperties = new Properties()
if (secretsPropertiesFile.exists()) {
    secretProperties.load(new FileInputStream(secretsPropertiesFile))
}
// Otherwise read from environment variables, this happens in CI
else {
    secretProperties.setProperty("signing_keystore_password", "${System.getenv('signing_keystore_password')}")
    secretProperties.setProperty("signing_key_password", "${System.getenv('signing_key_password')}")
    secretProperties.setProperty("signing_key_alias", "${System.getenv('signing_key_alias')}")
    secretProperties.setProperty("signing_key_location", "${System.getenv('signing_key_location')}")
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.robithohmurid.app"
        minSdk 21
        targetSdk 31
        versionCode 13
        versionName "1.0.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storePassword "${secretProperties['signing_keystore_password']}"
            keyAlias "${secretProperties['signing_key_alias']}"
            keyPassword "${secretProperties['signing_key_password']}"
            storeFile file("${secretProperties['signing_key_location']}")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            resValue("string", "app_name", "Arm Sirnarasa")
            buildConfigField("String", "BASE_URL", base_url)
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix ".dev"
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            resValue("string", "app_name", "Arm Dev")
            buildConfigField("String", "BASE_URL", base_url)
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    // UI
    implementation("androidx.core:core-ktx:1.7.0")
    implementation("androidx.appcompat:appcompat:1.4.0")
    implementation("com.google.android.material:material:1.4.0")
    implementation("androidx.constraintlayout:constraintlayout:2.1.2")
    implementation("androidx.swiperefreshlayout:swiperefreshlayout:1.1.0")
    implementation("androidx.viewpager2:viewpager2:1.0.0")
    implementation("io.coil-kt:coil:1.4.0") // Image Loader
    implementation("de.hdodenhof:circleimageview:3.1.0")
    implementation("com.facebook.shimmer:shimmer:0.5.0")
    implementation("com.tbuonomo:dotsindicator:4.2")
    // KTX
    implementation("androidx.core:core-ktx:1.7.0")
    implementation("androidx.fragment:fragment-ktx:1.4.0")
    implementation("androidx.collection:collection-ktx:1.2.0")
    // ViewModel
    def viewModel = '2.4.0'
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$viewModel")
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$viewModel")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$viewModel")
    implementation("androidx.lifecycle:lifecycle-reactivestreams-ktx:$viewModel")
    implementation("androidx.lifecycle:lifecycle-extensions:2.2.0")
    // Logger
    implementation("com.jakewharton.timber:timber:5.0.1")
    implementation("com.github.ajalt:timberkt:1.5.1")
    implementation("com.orhanobut:logger:2.2.0")
    // Kotlin Coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2")
    // Koin AndroidX (Dependency Injection)
    // Koin for Kotlin
    implementation("io.insert-koin:koin-core:2.2.3")
    // Koin extended & experimental features
    implementation("io.insert-koin:koin-core-ext:2.2.3")
    // Koin AndroidX Scope features
    implementation("io.insert-koin:koin-androidx-scope:2.2.3")
    // Koin AndroidX ViewModel features
    implementation("io.insert-koin:koin-androidx-viewmodel:2.2.3")
    // Koin AndroidX Fragment features
    implementation("io.insert-koin:koin-androidx-fragment:2.2.3")
    // Koin AndroidX WorkManager
    implementation("io.insert-koin:koin-androidx-workmanager:2.2.3")
    // Koin AndroidX Experimental features
    implementation("io.insert-koin:koin-androidx-ext:2.2.3")
    // Retrofit
    implementation("com.squareup.retrofit2:retrofit:2.9.0")
    implementation("com.squareup.retrofit2:converter-gson:2.9.0")
    implementation("com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2")
    implementation("com.squareup.okhttp3:okhttp:5.0.0-alpha.2")
    // Session
    implementation("com.orhanobut:hawk:2.0.1")
    /**
     * Date & Time
     * */
    implementation("joda-time:joda-time:2.10.8")
    /**
     * Markwon
     * */
    implementation("io.noties.markwon:core:4.6.2")
    implementation("io.noties.markwon:html:4.6.2")
    implementation("io.noties.markwon:image-coil:4.6.2")

    /**
     * Permission Helper
     * */
    implementation("com.karumi:dexter:6.2.2")

    /**
     * Gson
     */
    implementation("com.google.code.gson:gson:2.8.8")
    implementation("androidx.legacy:legacy-support-v4:1.0.0")
    implementation("androidx.browser:browser:1.4.0")

    /**
     * Firebase
     * */
    implementation(platform("com.google.firebase:firebase-bom:28.2.0"))
    implementation("com.google.firebase:firebase-analytics-ktx")
    implementation("com.google.firebase:firebase-crashlytics-ktx")
    implementation("com.google.firebase:firebase-perf-ktx")
    implementation("com.google.firebase:firebase-messaging-ktx")
    implementation("com.google.firebase:firebase-config-ktx")

    /**
     * Google
     * */
    implementation("com.google.android.gms:play-services-location:18.0.0")

    testImplementation("junit:junit:4.13.2")
    androidTestImplementation("androidx.test.ext:junit:1.1.3")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.4.0")
}